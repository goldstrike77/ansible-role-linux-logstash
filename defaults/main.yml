---
# General parameters #
logstash_is_install: false # A boolean to determine whether or not to install the LogStash.
logstash_version: '7.11.2' # Specify the Logstash version.
logstash_cluster: 'siem' # Specifies the name of the cluster.
logstash_path: '/data' # This directory is used to store server state.
logstash_rotate_day: '180' # Specify the logs retention days.
logstash_heap_size: '2g' # Specify the maximum memory allocation pool for a Java virtual machine.

# Role dependencies #
logstash_elastic_stack_dept: true # A boolean to determine whether or not use Elastic Stack components as same environment.

# Elastic Stack parameters #
logstash_elastic_stack_auth: true # A boolean to determine whether or not enable authentication.
logstash_elastic_stack_https: true # A boolean to determine whether or not Encrypting HTTP client communications.
logstash_elastic_stack_user: 'elastic' # Authorization user name, do not modify it.
logstash_elastic_stack_pass: 'changeme' # Authorization user password.
logstash_elastic_hosts: # List of Elasticsearch hosts Logstash should connect to.
  - 'localhost'
logstash_elastic_port: '9200' # Elasticsearch REST port.
logstash_elastic_heap_size: '4g' # Specify the maximum memory allocation pool for a Java virtual machine.
logstash_elastic_memory_lock: false # A boolean value, whether lock the process address space into memory on startup.
logstash_elastic_node_type: 'default' # Type of nodes: default, master, data, ingest and coordinat.
logstash_kibana_port: '5601' # Kibana server port.
logstash_kibana_proxy: false # A boolean to determine whether or no running behind a Proxy.
logstash_kibana_ngx_dept: true # A boolean to determine whether or not proxy web interface and API traffic using NGinx.
logstash_kibana_ngx_domain: 'siem.example.com' # Defines domain name.
logstash_kibana_ngx_port_http: '80' # NGinx HTTP listen port.
logstash_kibana_ngx_port_https: '443' # NGinx HTTPs listen port.
#logstash_kibana_plugins: # Specify Plug-in List.
#  - 'http://github.com/nsano-rururu/elastalert-kibana-plugin/releases/download/1.3.0/elastalert-kibana-plugin-1.3.0-{{ logstash_version }}.zip'

# Inputs Variables #
logstash_inputs_arg: # Define the global common inputs parameters.
#  - name: 'cisco-asa'
#    protocol: 'udp'
#    port: '10514'
#  - name: 'syslog-rfc'
#    protocol: 'syslog'
#    port: '1514'
#  - name: 'syslog-beats'
#    protocol: 'beats'
#    port: '5044'
  - name: 'syslog-gelf'
    protocol: 'udp'
    port: '12201'
#  - name: 'nginx-json'
#    protocol: 'syslog'
#    port: '12301'
#  - name: 'azure-nsg'
#    sa_name: 'xxxxx'
#    sa_access_key: 'xxxxx'
#    sa_container: 'xxxxx'
#  - name: 'azure-agw-access'
#    sa_name: 'xxxxx'
#    sa_access_key: 'xxxxx'
#    sa_container: 'insights-logs-applicationgatewayaccesslog'
#  - name: 'azure-agw-firewall'
#    sa_name: 'xxxxx'
#    sa_access_key: 'xxxxx'
#    sa_container: 'insights-logs-applicationgatewayfirewalllog'

# Listen port #
logstash_port_arg:
  exporter: '9198' # Port for prometheus exporter.
  api: '9600' # Port for the metrics REST endpoint.

# Server System Variables #
logstash_arg:
  index_refresh_interval: '30s' # How often to perform a index refresh operation.
  pipeline_workers: '{% if ansible_processor_vcpus > 2 %}{{ (ansible_processor_vcpus / 2) | int }}{% else %}1{% endif %}' # The number of workers.
  pipeline_batch_size: '{{ ansible_processor_vcpus * 250 }}' # How many events to retrieve from inputs before sending to workers.
  pipeline_batch_delay: '100' # How long to wait in milliseconds while polling for the next event.

# Service Mesh #
environments: 'prd' # Define the service environment.
datacenter: 'dc01' # Define the DataCenter.
domain: 'local' # Define the Domain.
customer: 'demo' # Define the customer name.
#tags: # Define the service custom label.
#  subscription: 'default'
#  owner: 'nobody'
#  department: 'Infrastructure'
#  organization: 'The Company'
#  region: 'China'
exporter_is_install: false # Whether to install prometheus exporter.
consul_public_register: false # Whether register a exporter service with public consul client.
consul_public_exporter_token: '00000000-0000-0000-0000-000000000000' # Public Consul client ACL token.
consul_public_http_prot: 'https' # The consul Hypertext Transfer Protocol.
consul_public_http_port: '8500' # The consul HTTP API port.
consul_public_clients: # List of public consul clients.
  - '127.0.0.1'
