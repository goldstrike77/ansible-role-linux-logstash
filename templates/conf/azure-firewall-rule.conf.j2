input {
  azure_blob_storage {
    tags => ["azure-firewall-rule"]
    storageaccount => "{{ item.sa_name }}"
    access_key => "{{ item.sa_access_key }}"
    container => "{{ item.sa_container }}"
    codec => "line"
    interval => 30
    dns_suffix => "{{ item.endpoint }}"
  }
}

filter {
  if "azure-firewall-rule" in[tags]{
    json {
      source => "message"
      remove_field => ["message"]
      skip_on_invalid_json => true
    }
    fingerprint {
      target => "[@metadata][uuid]"
      method => "UUID"
    }
    date {
      match => ["unixtimestamp", "UNIX"]
    }
  }
}

output {
  stdout {
    codec => rubydebug
  }
  if "azure-firewall-rule" in[tags]{
    elasticsearch {
      hosts => ['{{ logstash_elastic_hosts | list | join(":" + logstash_elastic_port + "', '") }}:{{ logstash_elastic_port }}']
      ssl_certificate_verification => false
      ssl => {% if logstash_elastic_stack_auth | bool and logstash_elastic_stack_https | bool %}true{% else %}false{% endif %}

      user => "{{ logstash_elastic_stack_user }}"
      password => "{{ logstash_elastic_stack_pass }}"
      index => "azure-firewall-rule-%{+YYYY.MM.dd}"
{% if logstash_version.split('.')[0] != '5' %}
      ilm_enabled => true
{% endif %}
      template => "/etc/logstash/template/elastic-azure-firewall-rule-template.json"
      template_name => "azure-firewall-rule"
      template_overwrite => true
      document_type => "_doc"
      document_id => "%{[@metadata][uuid]}"
    }
  }
}